* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* Name:     DC.DREATE.DICT
* Type:     Program
* Author:   dreller
* Date:     Apr 18, 2020
* Git:      mvDevCore
* System:   openQM 3.4.18
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
* Create DICT items.  Pass to DC.CREATE.DICT.SUBR.
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
* 
* Calling methods:
* - DC.CREATE.DICT
*   Will create DICT items defined in 'dcArtifDict.txt' file.
* - DC.CREATE.DICT {filename}
*   Will create DICT items defined in {/path/to/file}
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
$INCLUDE DC.INC.H
EQU EQU$MYNAME      TO "DC.CREATE.DICT"
EQU EQU$MODE        TO "UPD"            ;* UPD/ADD

! Pre-actions
    HEAD = ""
    HEAD<1> = "Dictionary creator."
    HEAD<2> = "Mode: Create new DICT items only."
        IF EQU$MODE = "UPD" THEN 
            HEAD<2> = "Mode: Recreate DICT items (overwrite if already existing)."
        END
    CALL DC.HEAD(HEAD)

! Program mainline
    GOSUB 1000  ;* Get the file from sentence
    GOSUB 2000  ;* Validate the file
    GOSUB 3000  ;* Open the file

! Post-actions 
    !undefined
    
RETURN
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
! Get the file from sentence
1000:

    FILE.PATH = ""
    ERR.TEMP  = ""
    CALL DC.SENTENCE.SUBR(SENTENCE(), EQU$MYNAME, FILE.PATH, ERR.TEMP)

!---- If no file is passed, use the default one
        IF FILE.PATH = "" THEN
            FILE.PATH = @PATH:@DS:"DEVCORE.PGM":@DS:"dcArtifDict.txt"
        END
RETURN 
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
! Validate the target file 
2000:

!-- Is the file exists ?
    VALID.FLAG = OSPATH(FILE.PATH, 2)
    IF NOT(VALID.FLAG) THEN 
        DISPLAY "Path not found: ":FILE.PATH
        RETURN
    END

!-- If it's a real file (not a directory)
    VALID.FLAG = OSPATH(FILE.PATH, 16)
    IF NOT(VALID.FLAG) THEN 
        DISPLAY "This is not a file: ":FILE.PATH 
        RETURN
    END
RETURN 
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
! Open the file 
3000: 

    OPENSEQ FILE.PATH TO SOURCE.FILE THEN GOTO 3010
    DISPLAY "Unable to open file: ":FILE.PATH 
    RETURN  

3010:
    LOOP
        READSEQ SOURCE.ITEM FROM SOURCE.FILE ELSE GOTO 3020
        GOSUB  4000
    REPEAT

3020:
    CLOSE SOURCE.FILE 

RETURN
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
! Create the dict item 
4000: 
!-- Validate if entry should be treated
    IS.COMMENT = (SOURCE.ITEM[1,1]="*")
    IS.EMPTY = (LEN(SOURCE.ITEM)<2)

    IF IS.COMMENT OR IS.EMPTY THEN 
        RETURN
    END

!-- Transform SOURCE.ITEM to the required MV for CD.CREATE.DICT.SUBR
    RESPONSE    = ""
    PARMS       = CHANGE(SOURCE.ITEM, "|", @AM)

    TEMP.TEXT = "Creating DICT, ":PARMS<DC$DICT.TYPE>
    TEMP.TEXT:= "-Type, Name '":PARMS<DC$DICT.NAME>:"'...  "
    DISPLAY TEMP.TEXT:
    
    CALL DC.CREATE.DICT.SUBR(PARMS, EQU$MODE, RESPONSE)
    RESPONSE.TEXT = "OK"
    ERROR.FLAG = (RESPONSE # "0")
    IF ERROR.FLAG THEN 
        CALL !ERRTEXT(RESPONSE.TEXT, RESPONSE)
    END
    DISPLAY RESPONSE.TEXT
RETURN 
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
END  
